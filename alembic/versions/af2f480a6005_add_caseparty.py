"""add CaseParty

Revision ID: af2f480a6005
Revises: 7bf3c8dae826
Create Date: 2025-09-02 13:59:56.111309

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'af2f480a6005'
down_revision: Union[str, Sequence[str], None] = '7bf3c8dae826'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('case_partys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('party_name', sa.String(length=50), nullable=False),
    sa.Column('party_role', sa.String(length=50), nullable=False),
    sa.Column('party_type', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('gender', sa.String(length=50), nullable=True),
    sa.Column('birthday', sa.String(length=50), nullable=True),
    sa.Column('nation', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=50), nullable=True),
    sa.Column('id_card', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('company_name', sa.String(length=50), nullable=True),
    sa.Column('company_address', sa.String(length=50), nullable=True),
    sa.Column('company_code', sa.String(length=50), nullable=True),
    sa.Column('owner_name', sa.String(length=50), nullable=True),
    sa.Column('bank_address', sa.String(length=50), nullable=True),
    sa.Column('bank_account', sa.String(length=50), nullable=True),
    sa.Column('bank_phone', sa.String(length=50), nullable=True),
    sa.Column('case_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_case_partys_id'), 'case_partys', ['id'], unique=False)
    op.create_index(op.f('ix_case_partys_party_name'), 'case_partys', ['party_name'], unique=False)
    
    # 数据迁移：将现有cases表中的当事人信息迁移到case_partys表
    # 迁移债权人信息
    op.execute("""
        INSERT INTO case_partys (
            party_name, party_role, party_type, case_id, created_at, updated_at
        )
        SELECT 
            creditor_name as party_name,
            'creditor' as party_role,
            COALESCE(creditor_type, 'person') as party_type,
            id as case_id,
            created_at,
            updated_at
        FROM cases 
        WHERE creditor_name IS NOT NULL AND creditor_name != ''
    """)
    
    # 迁移债务人信息
    op.execute("""
        INSERT INTO case_partys (
            party_name, party_role, party_type, case_id, created_at, updated_at
        )
        SELECT 
            debtor_name as party_name,
            'debtor' as party_role,
            COALESCE(debtor_type, 'person') as party_type,
            id as case_id,
            created_at,
            updated_at
        FROM cases 
        WHERE debtor_name IS NOT NULL AND debtor_name != ''
    """)
    
    # 删除索引和字段
    op.drop_index(op.f('ix_cases_creditor_name'), table_name='cases')
    op.drop_index(op.f('ix_cases_debtor_name'), table_name='cases')
    op.drop_column('cases', 'debtor_phone')
    op.drop_column('cases', 'debtor_name')
    op.drop_column('cases', 'creditor_phone')
    op.drop_column('cases', 'creditor_name')
    op.drop_column('cases', 'debtor_type')
    op.drop_column('cases', 'creditor_type')
    op.drop_column('cases', 'creditor_bank_account')
    op.drop_column('cases', 'creditor_bank_address')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 重新添加字段（先添加为可空字段）
    op.add_column('cases', sa.Column('creditor_bank_address', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('cases', sa.Column('creditor_bank_account', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('cases', sa.Column('creditor_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('cases', sa.Column('debtor_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('cases', sa.Column('creditor_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('cases', sa.Column('creditor_phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('cases', sa.Column('debtor_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('cases', sa.Column('debtor_phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    
    # 数据回滚：将case_partys表中的数据恢复到cases表
    # 恢复债权人信息
    op.execute("""
        UPDATE cases 
        SET 
            creditor_name = cp.party_name,
            creditor_type = cp.party_type
        FROM case_partys cp
        WHERE cases.id = cp.case_id 
        AND cp.party_role = 'creditor'
    """)
    
    # 恢复债务人信息
    op.execute("""
        UPDATE cases 
        SET 
            debtor_name = cp.party_name,
            debtor_type = cp.party_type
        FROM case_partys cp
        WHERE cases.id = cp.case_id 
        AND cp.party_role = 'debtor'
    """)
    
    # 为没有当事人信息的案件设置默认值
    op.execute("UPDATE cases SET creditor_name = '未知债权人' WHERE creditor_name IS NULL OR creditor_name = ''")
    op.execute("UPDATE cases SET debtor_name = '未知债务人' WHERE debtor_name IS NULL OR debtor_name = ''")
    
    # 现在可以安全地设置非空约束
    op.alter_column('cases', 'creditor_name', nullable=False)
    op.alter_column('cases', 'debtor_name', nullable=False)
    
    # 重新创建索引
    op.create_index(op.f('ix_cases_debtor_name'), 'cases', ['debtor_name'], unique=False)
    op.create_index(op.f('ix_cases_creditor_name'), 'cases', ['creditor_name'], unique=False)
    
    # 删除case_partys表
    op.drop_index(op.f('ix_case_partys_party_name'), table_name='case_partys')
    op.drop_index(op.f('ix_case_partys_id'), table_name='case_partys')
    op.drop_table('case_partys')
    # ### end Alembic commands ###

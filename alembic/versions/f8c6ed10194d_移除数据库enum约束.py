"""移除数据库Enum约束

Revision ID: f8c6ed10194d
Revises: 170e082badc5
Create Date: 2025-07-21 13:13:12.936761

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f8c6ed10194d'
down_revision: Union[str, Sequence[str], None] = '170e082badc5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('cases', 'creditor_type',
               existing_type=postgresql.ENUM('PERSON', 'COMPANY', 'INDIVIDUAL', name='partytype'),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('cases', 'debtor_type',
               existing_type=postgresql.ENUM('PERSON', 'COMPANY', 'INDIVIDUAL', name='partytype'),
               type_=sa.String(length=50),
               existing_nullable=True)
    sa.Enum('PERSON', 'COMPANY', 'INDIVIDUAL', name='partytype').drop(op.get_bind())
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('PERSON', 'COMPANY', 'INDIVIDUAL', name='partytype').create(op.get_bind())
    op.alter_column('cases', 'debtor_type',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('PERSON', 'COMPANY', 'INDIVIDUAL', name='partytype'),
               existing_nullable=True)
    op.alter_column('cases', 'creditor_type',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('PERSON', 'COMPANY', 'INDIVIDUAL', name='partytype'),
               existing_nullable=True)
    # ### end Alembic commands ###

"""add wecom models

Revision ID: 1451c7967396
Revises: af2f480a6005
Create Date: 2025-09-07 15:51:02.489302

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1451c7967396'
down_revision: Union[str, Sequence[str], None] = 'af2f480a6005'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('FULL', 'HALF', name='contacttype').create(op.get_bind())
    sa.Enum('NORMAL', 'DELETED', 'BLOCKED', 'HALF', name='externalcontactstatus').create(op.get_bind())
    sa.Enum('ACTIVE', 'INACTIVE', 'DISABLED', name='wecomstaffstatus').create(op.get_bind())
    op.create_table('contact_ways',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_id', sa.String(length=100), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('scene', sa.Integer(), nullable=False),
    sa.Column('style', sa.Integer(), nullable=True),
    sa.Column('remark', sa.String(length=500), nullable=True),
    sa.Column('skip_verify', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('qr_code', sa.String(length=1000), nullable=True),
    sa.Column('state', sa.String(length=200), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contact_ways_config_id'), 'contact_ways', ['config_id'], unique=True)
    op.create_index(op.f('ix_contact_ways_id'), 'contact_ways', ['id'], unique=False)
    op.create_table('customer_event_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('change_type', sa.String(length=100), nullable=True),
    sa.Column('staff_user_id', sa.String(length=100), nullable=False),
    sa.Column('external_user_id', sa.String(length=200), nullable=False),
    sa.Column('event_data', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=False),
    sa.Column('welcome_code', sa.String(length=200), nullable=True),
    sa.Column('state', sa.String(length=200), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customer_event_logs_id'), 'customer_event_logs', ['id'], unique=False)
    op.create_table('we_com_staffs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('department', sa.String(length=200), nullable=True),
    sa.Column('position', sa.String(length=200), nullable=True),
    sa.Column('mobile', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('avatar', sa.String(length=500), nullable=True),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'INACTIVE', 'DISABLED', name='wecomstaffstatus', create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_we_com_staffs_id'), 'we_com_staffs', ['id'], unique=False)
    op.create_index(op.f('ix_we_com_staffs_user_id'), 'we_com_staffs', ['user_id'], unique=True)
    op.create_table('external_contacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_user_id', sa.String(length=200), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('avatar', sa.String(length=500), nullable=True),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('gender', sa.Integer(), nullable=True),
    sa.Column('union_id', sa.String(length=200), nullable=True),
    sa.Column('status', postgresql.ENUM('NORMAL', 'DELETED', 'BLOCKED', 'HALF', name='externalcontactstatus', create_type=False), nullable=False),
    sa.Column('contact_type', postgresql.ENUM('FULL', 'HALF', name='contacttype', create_type=False), nullable=False),
    sa.Column('corp_name', sa.String(length=200), nullable=True),
    sa.Column('corp_full_name', sa.String(length=500), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['staff_id'], ['we_com_staffs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_external_contacts_external_user_id'), 'external_contacts', ['external_user_id'], unique=True)
    op.create_index(op.f('ix_external_contacts_id'), 'external_contacts', ['id'], unique=False)
    op.create_table('customer_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=200), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('external_contact_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('last_message_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=200), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['external_contact_id'], ['external_contacts.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['we_com_staffs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customer_sessions_id'), 'customer_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_customer_sessions_session_id'), 'customer_sessions', ['session_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_customer_sessions_session_id'), table_name='customer_sessions')
    op.drop_index(op.f('ix_customer_sessions_id'), table_name='customer_sessions')
    op.drop_table('customer_sessions')
    op.drop_index(op.f('ix_external_contacts_id'), table_name='external_contacts')
    op.drop_index(op.f('ix_external_contacts_external_user_id'), table_name='external_contacts')
    op.drop_table('external_contacts')
    op.drop_index(op.f('ix_we_com_staffs_user_id'), table_name='we_com_staffs')
    op.drop_index(op.f('ix_we_com_staffs_id'), table_name='we_com_staffs')
    op.drop_table('we_com_staffs')
    op.drop_index(op.f('ix_customer_event_logs_id'), table_name='customer_event_logs')
    op.drop_table('customer_event_logs')
    op.drop_index(op.f('ix_contact_ways_id'), table_name='contact_ways')
    op.drop_index(op.f('ix_contact_ways_config_id'), table_name='contact_ways')
    op.drop_table('contact_ways')
    sa.Enum('ACTIVE', 'INACTIVE', 'DISABLED', name='wecomstaffstatus').drop(op.get_bind())
    sa.Enum('NORMAL', 'DELETED', 'BLOCKED', 'HALF', name='externalcontactstatus').drop(op.get_bind())
    sa.Enum('FULL', 'HALF', name='contacttype').drop(op.get_bind())
    # ### end Alembic commands ###

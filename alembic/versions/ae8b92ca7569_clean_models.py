"""clean models

Revision ID: ae8b92ca7569
Revises: 
Create Date: 2025-07-16 10:56:17.980599

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ae8b92ca7569'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('DRAFT', 'INFO_ENTERED', 'EVIDENCE_ANNOTATED', 'DOCUMENTS_GENERATED', name='casestatus').create(op.get_bind())
    op.create_table('feature_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('extracted_features', sa.JSON(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feature_groups_id'), 'feature_groups', ['id'], unique=False)
    op.create_table('staffs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staffs_id'), 'staffs', ['id'], unique=False)
    op.create_index(op.f('ix_staffs_username'), 'staffs', ['username'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('id_card', sa.String(length=18), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_id_card'), 'users', ['id_card'], unique=True)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_table('cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('case_type', postgresql.ENUM('DEBT', 'CONTRACT', name='casetype', create_type=False), nullable=False),
    sa.Column('case_status', postgresql.ENUM('DRAFT', 'INFO_ENTERED', 'EVIDENCE_ANNOTATED', 'DOCUMENTS_GENERATED', name='casestatus', create_type=False), nullable=False),
    sa.Column('creditor_name', sa.String(length=50), nullable=False),
    sa.Column('creditor_type', postgresql.ENUM('PERSON', 'COMPANY', 'INDIVIDUAL', name='partytype', create_type=False), nullable=True),
    sa.Column('debtor_name', sa.String(length=50), nullable=False),
    sa.Column('debtor_type', postgresql.ENUM('PERSON', 'COMPANY', 'INDIVIDUAL', name='partytype', create_type=False), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cases_creditor_name'), 'cases', ['creditor_name'], unique=False)
    op.create_index(op.f('ix_cases_debtor_name'), 'cases', ['debtor_name'], unique=False)
    op.create_index(op.f('ix_cases_id'), 'cases', ['id'], unique=False)
    op.create_index(op.f('ix_cases_title'), 'cases', ['title'], unique=False)
    op.create_table('evidences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_url', sa.String(length=500), nullable=False),
    sa.Column('file_name', sa.String(length=200), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_extension', sa.String(length=20), nullable=False),
    sa.Column('individual_features', sa.JSON(), nullable=True),
    sa.Column('case_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_evidences_id'), 'evidences', ['id'], unique=False)
    op.create_table('evidence_feature_group_associations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('evidence_id', sa.Integer(), nullable=False),
    sa.Column('feature_group_id', sa.Integer(), nullable=False),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['evidence_id'], ['evidences.id'], ),
    sa.ForeignKeyConstraint(['feature_group_id'], ['feature_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_evidence_feature_group_associations_id'), 'evidence_feature_group_associations', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_evidence_feature_group_associations_id'), table_name='evidence_feature_group_associations')
    op.drop_table('evidence_feature_group_associations')
    op.drop_index(op.f('ix_evidences_id'), table_name='evidences')
    op.drop_table('evidences')
    op.drop_index(op.f('ix_cases_title'), table_name='cases')
    op.drop_index(op.f('ix_cases_id'), table_name='cases')
    op.drop_index(op.f('ix_cases_debtor_name'), table_name='cases')
    op.drop_index(op.f('ix_cases_creditor_name'), table_name='cases')
    op.drop_table('cases')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_id_card'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_staffs_username'), table_name='staffs')
    op.drop_index(op.f('ix_staffs_id'), table_name='staffs')
    op.drop_table('staffs')
    op.drop_index(op.f('ix_feature_groups_id'), table_name='feature_groups')
    op.drop_table('feature_groups')
    sa.Enum('DRAFT', 'INFO_ENTERED', 'EVIDENCE_ANNOTATED', 'DOCUMENTS_GENERATED', name='casestatus').drop(op.get_bind())
    # ### end Alembic commands ###

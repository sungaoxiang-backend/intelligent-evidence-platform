version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    env_file:
      - .env.docker
    environment:
      - POSTGRES_SERVER=db  # 覆盖.env.docker中的配置，确保在容器环境中使用正确的数据库主机
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    restart: always

  db:
    image: ankane/pgvector:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.docker
    ports:
      - "5432:5432"
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: [
      "postgres", 
      "-c", "max_connections=200",
      "-c", "shared_buffers=256MB",
      "-c", "effective_cache_size=768MB",
      "-c", "maintenance_work_mem=64MB",
      "-c", "random_page_cost=1.1",
      "-c", "effective_io_concurrency=200",
      "-c", "work_mem=16MB",
      "-c", "min_wal_size=1GB",
      "-c", "max_wal_size=4GB",
      "-c", "timezone=Asia/Shanghai"
    ]

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge